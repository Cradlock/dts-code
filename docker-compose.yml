
services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=buywithdts
      - POSTGRES_DB=db

  backend:
    build: ./backend
    container_name: dts_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - db

  front:
    build: "./frontend"
    container_name: dts_front
    ports:
      - "3000:80"

  admin:
    build: "./admin"
    container_name: dts_admin
    ports:
      - "3001:80"

  nginx:  
    image: nginx:alpine     
    ports: 
      - "80:80"
      - "443:443"
    depends_on:
      - front
      - admin
      - backend
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
      - ./frontend/build:/usr/share/nginx/html/front
      - ./admin/build:/usr/share/nginx/html/admin
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d
      - ./html
    networks:
      - webnet

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d
      - ./html
    depends_on:
      - nginx-proxy
    networks:
      - webnet
    
networks:
  webnet: