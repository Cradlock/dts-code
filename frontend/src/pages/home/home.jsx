import { Link } from "react-router-dom";
import { InfoContext } from "../../providers/info";
import { CategoryContext } from "../../providers/category";
import { useContext, useEffect, useState } from "react";
import Spinner from "../Spinner.jsx/Spinner";
import productImg from "../../images/pngtree-not-found-image_2238448.jpg"
import { calculateDiscountedPrice } from "../../components/lib";
import Load from "../../components/load";

const Home = () => {
  const { info_data, info_loading } = useContext(InfoContext);
  const { categoryData, categoryLoading } = useContext(CategoryContext);

  const [recommend_products, setRProduct] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [highlightedCategory, setHighlightedCategory] = useState(null);

  const [special,setSpecial] = useState("loaded");
  const [news,setNews] = useState("loaded");

  // –¢–æ–≤–∞—Ä–ª–∞—Ä–¥—ã –∂“Ø–∫—Ç”©”©
  useEffect(() => {
    const req = async () => {
      try {
        const res = await fetch(
          `${process.env.REACT_APP_API}api/products/?page_size=8`
        );

        if (!res.ok) {
          setError(`–ñ“Ø–∫—Ç”©”©–¥”© –∫–∞—Ç–∞: ${res.status}`);
          return;
        }

        const data = await res.json();
        setRProduct(data.results);
      } catch (er) {
        setError("–°–µ—Ä–≤–µ—Ä–≥–µ —Ç—É—Ç–∞—à—É—É–¥–∞ –∫–∞—Ç–∞ –∫–µ—Ç—Ç–∏");
      } finally {
        setLoading(false);
      }
    };

    const reqEvents = async () => {
      try{
         const res = await fetch(
          `${process.env.REACT_APP_API}admin_api/events/?is_spec=true`
        );

        if (!res.ok) {
          setError(`–ñ“Ø–∫—Ç”©”©–¥”© –∫–∞—Ç–∞: ${res.status}`);
          return;
        }

        const data = await res.json();
        setSpecial(data);
      } catch(er){
        setError("–°–µ—Ä–≤–µ—Ä–≥–µ —Ç—É—Ç–∞—à—É—É–¥–∞ –∫–∞—Ç–∞ –∫–µ—Ç—Ç–∏");
        setSpecial(null);
      } finally {
        setLoading(false);
      }
    }

    const reqNews = async () => {
      try{
         const res = await fetch(
          `${process.env.REACT_APP_API}admin_api/events/?is_spec=false`
        );

        if (!res.ok) {
          setError(`–ñ“Ø–∫—Ç”©”©–¥”© –∫–∞—Ç–∞: ${res.status}`);
          return;
        }

        const data = await res.json();
        setNews(data);
      } catch(er){
        setError("–°–µ—Ä–≤–µ—Ä–≥–µ —Ç—É—Ç–∞—à—É—É–¥–∞ –∫–∞—Ç–∞ –∫–µ—Ç—Ç–∏");
        setNews(null);
      } finally {
        setLoading(false);
      }
    }

    req();
    reqEvents();
    reqNews();
  }, []);

  if (info_loading == null)
    return <h1>–ú–∞–≥–∞–∑–∏–Ω —Ç—É—É—Ä–∞–ª—É—É –º–∞–∞–ª—ã–º–∞—Ç –∂“Ø–∫—Ç”©–ª–±”©–π –∫–∞–ª–¥—ã</h1>;

  if (info_loading) return <Spinner text={"–ú–∞–∞–ª—ã–º–∞—Ç –∂“Ø–∫—Ç”©–ª“Ø“Ø–¥”©..."} />;

  const renderOffers = () => {
    if (special === "loaded") {
      return <Spinner />; // –∂“Ø–∫—Ç”©–ª“Ø–ø –∂–∞—Ç–∫–∞–Ω–¥–∞ ‚Äî —Å–ø–∏–Ω–Ω–µ—Ä
    }

    if (!special || special.length === 0) {
      return null; // –±–æ—à —Ç–∏–∑–º–µ–∫ –±–æ–ª—Å–æ ‚Äî –∫”©—Ä—Å”©—Ç–ø”©–π–±“Ø–∑
    }

    return (
      <div className="offers-grid">
        {special.map((item) => (
          <div key={item.id} className="offer-card">
            <h3>{item.product_name || item.title}</h3>
            <p>{item.desc || "–ë–∞—è–Ω–¥–æ–æ –∂–æ–∫"}</p>
          </div>
        ))}
      </div>
    );
  };

  const renderNews = () => {
    if (news === "loaded") {
      return <Spinner />; // –∂“Ø–∫—Ç”©–ª“Ø–ø –∂–∞—Ç–∫–∞–Ω–¥–∞ ‚Äî —Å–ø–∏–Ω–Ω–µ—Ä
    }

    if (!news || news.length === 0) {
      return null; 
    }

    return (
       <div className="container">
          <h2 className="section-title">üì∞ –ê–∫—ã—Ä–∫—ã –∂–∞“£—ã–ª—ã–∫—Ç–∞—Ä</h2>
      <ul className="news-list">
        {news.map((item) => (
            <li>{item.desc}</li>
        ))}
      </ul>
          <Link to="/news" className="btn-secondary" style={{color:"blue"}}>
            –ë–∞—Ä–¥—ã–∫ –∂–∞“£—ã–ª—ã–∫—Ç–∞—Ä
          </Link>
        </div>
    );
  };

  return (
    <div className="home">
      {/* üîπ –ë–ê–ù–ù–ï–† */}
      <section className="banner">
        <div className="container">
          <div className="banner-content">
            <h1>{info_data?.title || "DTS Shop"} –¥“Ø–∫”©–Ω“Ø–Ω”© –∫–æ—à –∫–µ–ª–∏“£–∏–∑</h1>
            <p>–≠“£ –º—ã–∫—Ç—ã —Ç–æ–≤–∞—Ä–ª–∞—Ä —ç“£ —ã–ª–∞–π—ã–∫—Ç—É—É –±–∞–∞–¥–∞.</p>
            <div className="banner-buttons">
              <Link to="/catalog" className="btn-primary">
                üõí –ö–∞—Ç–∞–ª–æ–≥–≥–æ ”©—Ç“Ø“Ø
              </Link>
              <Link to="/about" className="btn-secondary">
                ‚ÑπÔ∏è –ö–µ–Ω–µ–Ω–∏—Ä—ç—ç–∫ –±–∏–ª“Ø“Ø
              </Link>
            </div>
          </div>
        </div>
      </section>

      {/* üîπ –ê–†–ó–ê–ù–î–ê–¢–£–£–õ–ê–† / –°–ü–ï–¶–ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø */}
      <section className="special-offers">
        <div className="container">
          <h2 className="section-title">üî• ”®–∑–≥”©—á”© —Å—É–Ω—É—à—Ç–∞—Ä</h2>
          {error && <p style={{ color: "red" }}>{error}</p>}
          {renderOffers()}
        </div>
      </section>

      {/* üîπ –°–£–ù–£–®–¢–ê–õ–ì–ê–ù –¢–û–í–ê–†–õ–ê–† */}
      <section className="products">
        <div className="container">
          <h2 className="section-title">üõç –°—É–Ω—É—à—Ç–∞–ª–≥–∞–Ω —Ç–æ–≤–∞—Ä–ª–∞—Ä</h2>

          {error && <p className="error-text">{error}</p>}

          <div className="products-grid">
            {loading ? (
              <Spinner text={"–¢–æ–≤–∞—Ä–ª–∞—Ä –∂“Ø–∫—Ç”©–ª“Ø“Ø–¥”©..."} />
            ) : (
              recommend_products.map((elem) => (
                <div className="card" key={elem.id}>
                  <div className="card-image">
                    <img
                      src={elem.cover || productImg}
                      alt={elem.title}
                      loading="lazy"
                    />
                  </div>
                  <div className="card-info">
                    <h3>{elem.title}</h3>
                    
                    {elem.discount > 1 ? (
                       <p>
                         <span style={{ textDecoration: "line-through", color: "#888", marginRight: "8px" }}>
                           {elem.price} —Å–æ–º
                         </span>
                         <span style={{ fontWeight: "bold", color: "#ff4500" }}>
                           {calculateDiscountedPrice(elem)} —Å–æ–º
                         </span>
                       </p>
                     ) : (
                       <p className="price">{elem.price} —Å–æ–º</p>
                     )}

                    <p className="desc">
                      {elem.description?.slice(0, 60) || "–ë–∞—è–Ω–¥–æ–æ –∂–æ–∫"}
                      ...
                    </p>
                    <div className="card-actions">
                      <Link to={`/details/${elem.id}`} className="details-btn">
                        –¢–æ–ª—É–≥—É—Ä–∞–∞–∫
                      </Link>
                    </div>
                  </div>
                </div>
              ))
            )}
          </div>
        </div>
      </section>

      {/* üîπ –ö–ê–¢–ï–ì–û–†–ò–Ø–õ–ê–† */}
      <section className="categories">
        <div className="container">
          <h2 className="section-title">üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è–ª–∞—Ä</h2>

          {categoryLoading ? (
            <Spinner text={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è–ª–∞—Ä –∂“Ø–∫—Ç”©–ª“Ø“Ø–¥”©..."} />
          ) : (
            <div className="categories-list">
              {categoryData.map((elem) => (
                <Link
                  to="/catalog"
                  key={elem.id}
                  className={`category ${
                    highlightedCategory === elem.id ? "highlighted" : ""
                  }`}
                  onMouseEnter={() => setHighlightedCategory(elem.id)}
                  onMouseLeave={() => setHighlightedCategory(null)}
                >

                  <span>{elem.title}</span>
                </Link>
              ))}
            </div>
          )}
        </div>
      </section>

      {/* üîπ –ë–ò–ó –ñ”®–ù“Æ–ù–î”® */}
      <section className="about-preview">
        <div className="container">
          <h2 className="section-title">üè¢ –ë–∏–∑ –∂”©–Ω“Ø–Ω–¥”©</h2>
          <div className="about-content">
            <p>
              –ë–∏–∑ ‚Äî {info_data?.title || "–æ–Ω–ª–∞–π–Ω-–¥“Ø–∫”©–Ω"}, —Å–∞–ø–∞—Ç—Ç—É—É —Ç–æ–≤–∞—Ä–ª–∞—Ä–¥—ã —Å—É–Ω—É—à—Ç–∞–π–±—ã–∑: —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞, –∫–∏–π–∏–º-–∫–µ—á–µ, —Ç–µ—Ö–Ω–∏–∫–∞ –∂–∞–Ω–∞ –±–∞—à–∫–∞ –∫”©–ø –Ω–µ—Ä—Å–µ.
              –ë–∏–∑ –∞—Ä–∑–∞–Ω –±–∞–∞–ª–∞—Ä –∂–∞–Ω–∞ —ã–ª–¥–∞–º –∂–µ—Ç–∫–∏—Ä“Ø“Ø –º–µ–Ω–µ–Ω —Å—ã–π–º—ã–∫—Ç–∞–Ω–∞–±—ã–∑.
            </p>
            <ul className="about-list">
              <li>üí≥ –¢”©–ª”©–º–¥“Ø–Ω —ã“£–≥–∞–π–ª—É—É —ã–∫–º–∞–ª–∞—Ä—ã</li>
              <li>üõ° –ê—Ä –±–∏—Ä —Ç–æ–≤–∞—Ä–≥–∞ —Å–∞–ø–∞—Ç –∫–µ–ø–∏–ª–¥–∏–≥–∏</li>
            </ul>
            <Link to="/about" className="btn-secondary">
              –¢–æ–ª—É–≥—É—Ä–∞–∞–∫
            </Link>
          </div>
        </div>
      </section>

      {/* üîπ –ñ–ê“¢–´–õ–´–ö–¢–ê–† */}
      <section className="news-preview">
          {error && <p style={{ color: "red" }}>{error}</p>}
          {renderNews()}
      </section>
    </div>
  );
};

export default Home;
